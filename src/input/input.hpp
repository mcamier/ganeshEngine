#ifndef RENDERENGINEPLAYGROUND_INPUT_HPP
#define RENDERENGINEPLAYGROUND_INPUT_HPP

#include <cstdint>

#include <GLFW/glfw3.h>

namespace rep
{


typedef enum inputKeyboardKey
{
    INPUT_KEY_UNKNOWN = 0,
    INPUT_KEY_SPACE = 1,
    INPUT_KEY_APOSTROPHE = 2,
    INPUT_KEY_COMMA = 3,
    INPUT_KEY_MINUS = 4,
    INPUT_KEY_PERIOD = 5,
    INPUT_KEY_SLASH = 6,
    INPUT_KEY_0 = 7,
    INPUT_KEY_1 = 8,
    INPUT_KEY_2 = 9,
    INPUT_KEY_3 = 10,
    INPUT_KEY_4 = 11,
    INPUT_KEY_5 = 12,
    INPUT_KEY_6 = 13,
    INPUT_KEY_7 = 14,
    INPUT_KEY_8 = 15,
    INPUT_KEY_9 = 16,
    INPUT_KEY_SEMICOLON = 17,
    INPUT_KEY_EQUAL = 18,
    INPUT_KEY_A = 19,
    INPUT_KEY_B = 20,
    INPUT_KEY_C = 21,
    INPUT_KEY_D = 22,
    INPUT_KEY_E = 23,
    INPUT_KEY_F = 24,
    INPUT_KEY_G = 25,
    INPUT_KEY_H = 26,
    INPUT_KEY_I = 27,
    INPUT_KEY_J = 29,
    INPUT_KEY_K = 30,
    INPUT_KEY_L = 31,
    INPUT_KEY_M = 32,
    INPUT_KEY_N = 33,
    INPUT_KEY_O = 34,
    INPUT_KEY_P = 35,
    INPUT_KEY_Q = 36,
    INPUT_KEY_R = 37,
    INPUT_KEY_S = 38,
    INPUT_KEY_T = 39,
    INPUT_KEY_U = 40,
    INPUT_KEY_V = 41,
    INPUT_KEY_W = 42,
    INPUT_KEY_X = 43,
    INPUT_KEY_Y = 44,
    INPUT_KEY_Z = 45,
    INPUT_KEY_LEFT_BRACKET = 46,
    INPUT_KEY_BACKSLASH = 47,
    INPUT_KEY_RIGHT_BRACKET = 48,
    INPUT_KEY_GRAVE_ACCENT = 49,
    INPUT_KEY_WORLD_1 = 50,
    INPUT_KEY_WORLD_2 = 51,
    INPUT_KEY_ESCAPE = 52,
    INPUT_KEY_ENTER = 53,
    INPUT_KEY_TAB = 54,
    INPUT_KEY_BACKSPACE = 55,
    INPUT_KEY_INSERT = 56,
    INPUT_KEY_DELETE = 57,
    INPUT_KEY_RIGHT = 58,
    INPUT_KEY_LEFT = 59,
    INPUT_KEY_DOWN = 60,
    INPUT_KEY_UP = 61,
    INPUT_KEY_PAGE_UP = 62,
    INPUT_KEY_PAGE_DOWN = 63,
    INPUT_KEY_HOME = 64,
    INPUT_KEY_END = 65,
    INPUT_KEY_CAPS_LOCK = 66,
    INPUT_KEY_SCROLL_LOCK = 67,
    INPUT_KEY_NUM_LOCK = 68,
    INPUT_KEY_PRINT_SCREEN = 69,
    INPUT_KEY_PAUSE = 70,
    INPUT_KEY_F1 = 71,
    INPUT_KEY_F2 = 72,
    INPUT_KEY_F3 = 73,
    INPUT_KEY_F4 = 74,
    INPUT_KEY_F5 = 75,
    INPUT_KEY_F6 = 76,
    INPUT_KEY_F7 = 77,
    INPUT_KEY_F8 = 78,
    INPUT_KEY_F9 = 79,
    INPUT_KEY_F10 = 80,
    INPUT_KEY_F11 = 81,
    INPUT_KEY_F12 = 82,
    INPUT_KEY_F13 = 83,
    INPUT_KEY_F14 = 84,
    INPUT_KEY_F15 = 85,
    INPUT_KEY_F16 = 86,
    INPUT_KEY_F17 = 87,
    INPUT_KEY_F18 = 88,
    INPUT_KEY_F19 = 89,
    INPUT_KEY_F20 = 90,
    INPUT_KEY_F21 = 91,
    INPUT_KEY_F22 = 92,
    INPUT_KEY_F23 = 93,
    INPUT_KEY_F24 = 94,
    INPUT_KEY_F25 = 95,
    INPUT_KEY_KP_0 = 96,
    INPUT_KEY_KP_1 = 97,
    INPUT_KEY_KP_2 = 98,
    INPUT_KEY_KP_3 = 99,
    INPUT_KEY_KP_4 = 100,
    INPUT_KEY_KP_5 = 101,
    INPUT_KEY_KP_6 = 102,
    INPUT_KEY_KP_7 = 103,
    INPUT_KEY_KP_8 = 104,
    INPUT_KEY_KP_9 = 105,
    INPUT_KEY_KP_DECIMAL = 106,
    INPUT_KEY_KP_DIVIDE = 107,
    INPUT_KEY_KP_MULTIPLY = 108,
    INPUT_KEY_KP_SUBTRACT = 109,
    INPUT_KEY_KP_ADD = 110,
    INPUT_KEY_KP_ENTER = 111,
    INPUT_KEY_KP_EQUAL = 112,
    INPUT_KEY_LEFT_SHIFT = 113,
    INPUT_KEY_LEFT_CONTROL = 114,
    INPUT_KEY_LEFT_ALT = 115,
    INPUT_KEY_LEFT_SUPER = 116,
    INPUT_KEY_RIGHT_SHIFT = 117,
    INPUT_KEY_RIGHT_CONTROL = 118,
    INPUT_KEY_RIGHT_ALT = 119,
    INPUT_KEY_RIGHT_SUPER = 120,
    INPUT_KEY_MENU = 121,
    INPUT_KEY_LAST = INPUT_KEY_MENU,
    INPUT_KEY_COUNT = INPUT_KEY_LAST+1
} inputKeyboardKey;


//
typedef enum inputMouseButton
{
    INPUT_MOUSE_BUTTON_1 = 0,
    INPUT_MOUSE_BUTTON_2 = 1,
    INPUT_MOUSE_BUTTON_3 = 2,
    INPUT_MOUSE_BUTTON_4 = 3,
    INPUT_MOUSE_BUTTON_5 = 4,
    INPUT_MOUSE_BUTTON_6 = 5,
    INPUT_MOUSE_BUTTON_7 = 6,
    INPUT_MOUSE_BUTTON_8 = 7,
    INPUT_MOUSE_BUTTON_LEFT = INPUT_MOUSE_BUTTON_1,
    INPUT_MOUSE_BUTTON_RIGHT = INPUT_MOUSE_BUTTON_2,
    INPUT_MOUSE_BUTTON_MIDDLE = INPUT_MOUSE_BUTTON_3,
    INPUT_MOUSE_BUTTON_LAST = INPUT_MOUSE_BUTTON_8,

} inputMouseButton;


//
typedef enum inputActionButton
{
    INPUT_ACTION_NONE = -1,
    INPUT_ACTION_PRESS = 0,
    INPUT_ACTION_RELEASE = 1,
    INPUT_ACTION_REPEAT = 2,

} inputActionButton;


//
typedef enum inputModifierBitsFlag
{
    INPUT_MODIFIER_NONE = 0,
    INPUT_MODIFIER_SHIFT = 1 << 0,
    INPUT_MODIFIER_CONTROL = 1 << 1,
    INPUT_MODIFIER_ALT = 1 << 2,
    INPUT_MODIFIER_SUPER = 1 << 3

} inputModifierBitsFlag;
typedef uint8_t inputModifierFlag;

} // namespace rep

#endif //RENDERENGINEPLAYGROUND_INPUT_GLFW_HPP
